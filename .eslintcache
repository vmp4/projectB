[{"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\index.js":"1","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\reportWebVitals.js":"2","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\App.js":"3","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\About.js":"4","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\NotFoundPage.js":"5","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Home.js":"6","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Cart.js":"7","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Products.js":"8","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\UserList.js":"9","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Register.js":"10","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Login.js":"11","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\UserCenter.js":"12","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\utils\\ProtectedRoute.js":"13","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\components\\Footer.js":"14","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\components\\Breadcrumb.js":"15","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\components\\Menu.js":"16","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\data\\CityTownData.js":"17","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\data\\CityData.js":"18"},{"size":494,"mtime":1610441794112,"results":"19","hashOfConfig":"20"},{"size":356,"mtime":1609517640588,"results":"21","hashOfConfig":"20"},{"size":3050,"mtime":1614586862410,"results":"22","hashOfConfig":"20"},{"size":125,"mtime":1610869184037,"results":"23","hashOfConfig":"20"},{"size":639,"mtime":1610858220704,"results":"24","hashOfConfig":"20"},{"size":1872,"mtime":1611025246640,"results":"25","hashOfConfig":"20"},{"size":3226,"mtime":1611715220457,"results":"26","hashOfConfig":"20"},{"size":7440,"mtime":1611723527999,"results":"27","hashOfConfig":"20"},{"size":2343,"mtime":1613494456438,"results":"28","hashOfConfig":"20"},{"size":139,"mtime":1610868037161,"results":"29","hashOfConfig":"20"},{"size":3895,"mtime":1614586061575,"results":"30","hashOfConfig":"20"},{"size":13602,"mtime":1614581222427,"results":"31","hashOfConfig":"20"},{"size":466,"mtime":1611723982235,"results":"32","hashOfConfig":"20"},{"size":393,"mtime":1610961895400,"results":"33","hashOfConfig":"20"},{"size":1115,"mtime":1613725410497,"results":"34","hashOfConfig":"20"},{"size":3349,"mtime":1611725205878,"results":"35","hashOfConfig":"20"},{"size":8690,"mtime":1612424909531,"results":"36","hashOfConfig":"20"},{"size":447,"mtime":1611995005161,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1hdfflo",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\index.js",[],["76","77"],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\reportWebVitals.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\App.js",["78"],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\About.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Home.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Cart.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Products.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\UserList.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Register.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\Login.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\pages\\UserCenter.js",["79"],"import React, { useEffect, useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Col, Button, InputGroup } from 'react-bootstrap'\nimport {\n  FaTransgender,\n  FaBirthdayCake,\n  FaUserLock,\n  FaUserEdit,\n  FaCity,\n} from 'react-icons/fa'\nimport { GiSmartphone, GiModernCity, GiHouse } from 'react-icons/gi'\nimport { GoMail } from 'react-icons/go'\n\nimport CityData from '../data/CityData'\nimport CityTownData from '../data/CityTownData'\n\nfunction UserCenter(props) {\n  const id = props.id\n  const [loading, setLoading] = useState(true)\n  // 顯示打勾或是錯誤\n  const [validated, setValidated] = useState(false)\n\n  const [userInfo, setUserInfo] = useState({\n    name: '',\n    username: '',\n    password: '',\n    sex: '',\n    birthday: '',\n    mail: '',\n    tel: '',\n    city: '',\n    town: '',\n    zip: '',\n    add: '',\n  })\n  const [cityOption, setCityOption] = useState([])\n  const [cityTown, setCityTown] = useState({})\n  const [townOption, setTownOption] = useState([])\n\n  // 一開始的地址函式\n  const setAddCTArr = () => {\n    // 城市陣列 For初始下拉選單\n    let arrCity = []\n    for (let i in CityData) {\n      arrCity.push(i)\n    }\n    setCityOption(arrCity)\n    let firstCity = arrCity[0]\n    // setCity(firstCity)\n\n    // 鄉鎮陣列 For初始下拉選單\n    let arrTown = []\n    for (let i in CityTownData[firstCity]) {\n      arrTown.push(i)\n    }\n    setTownOption(arrTown)\n    // let firstTown = arrTown[0]\n    // setTown(firstTown)\n\n    // For初始郵遞區號\n    // let firstZip = CityTownData[firstCity][firstTown]\n    // setZip(firstZip)\n  }\n\n  // 讀取資料函式\n  async function getDataFromServer() {\n    const request = new Request('http://localhost:5555/user/' + id, {\n      method: 'GET',\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }),\n    })\n\n    const response = await fetch(request)\n    const data = await response.json()\n\n    setUserInfo({\n      name: data.name,\n      username: data.username,\n      password: data.password,\n      sex: data.sex,\n      birthday: data.birthday,\n      mail: data.mail,\n      tel: data.tel,\n      city: data.city,\n      town: data.town,\n      zip: data.zip,\n      add: data.add,\n    })\n  }\n\n  // 送出資料函式\n  async function updataToServer() {\n    setLoading(true)\n\n    const request = new Request('http://localhost:5555/user/' + id, {\n      method: 'PUT',\n      body: JSON.stringify(userInfo),\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }),\n    })\n\n    const response = await fetch(request)\n    const data = await response.json()\n\n    setTimeout(() => {\n      setLoading(false)\n      alert('儲存完成')\n      setUserInfo({\n        name: data.name,\n        username: data.username,\n        password: data.password,\n        sex: data.sex,\n        birthday: data.birthday,\n        mail: data.mail,\n        tel: data.tel,\n        city: data.city,\n        town: data.town,\n        zip: data.zip,\n        add: data.add,\n      })\n      setValidated(false)\n    })\n  }\n\n  // 資料輸入及時改變\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setUserInfo((prevInfo) => ({\n      ...prevInfo,\n      [id]: value,\n    }))\n  }\n\n  // 確認資料及送出\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    } else {\n      updataToServer()\n    }\n\n    setValidated(true)\n  }\n\n  // 一開始讀取資料 當讀取資料時設置時停\n  useEffect(() => {\n    setAddCTArr()\n\n    getDataFromServer()\n\n    setTimeout(() => {\n      setLoading(false)\n    }, 500)\n  }, [])\n\n  // 當城市改變時改變鄉鎮陣列\n  useEffect(() => {\n    if (userInfo.city !== '') {\n      let arrTown = []\n      for (let i in CityTownData[userInfo.city]) {\n        arrTown.push(i)\n      }\n      setTownOption(arrTown)\n      setCityTown(CityTownData[userInfo.city])\n      setUserInfo((userInfo) => ({\n        ...userInfo,\n        town: arrTown[0],\n      }))\n    }\n  }, [userInfo.city])\n\n  // 當鄉鎮改變時改變郵遞區號\n  useEffect(() => {\n    if (cityTown !== {} && userInfo.town !== '') {\n      let arrZip = cityTown[userInfo.town]\n      setUserInfo((userInfo) => ({\n        ...userInfo,\n        zip: arrZip,\n      }))\n    }\n  }, [cityTown, userInfo.town])\n\n  const spinner = (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  )\n\n  const display = (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      {/* 第１行 */}\n      <Form.Row>\n        {/* 第１欄－帳號 */}\n        <Form.Group as={Col} md=\"6\" controlId=\"username\">\n          <Form.Label>帳號</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupUsername\">\n                <FaUserLock />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              disabled\n              defaultValue={userInfo.username}\n              aria-describedby=\"inputGroupUsername\"\n            />\n          </InputGroup>\n        </Form.Group>\n\n        {/* 第２欄－姓名 */}\n        <Form.Group as={Col} md=\"4\" controlId=\"name\">\n          <Form.Label>姓名</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupName\">\n                <FaUserEdit />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              required\n              type=\"text\"\n              onChange={handleChange}\n              placeholder=\"請輸入姓名\"\n              value={userInfo.name}\n              aria-describedby=\"inputGroupName\"\n              maxLength=\"32\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              　　　　沒有輸入姓名！\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n\n        {/* 第３欄－性別 */}\n        <Form.Group as={Col} md=\"2\" controlId=\"sex\">\n          <Form.Label>性別</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupSex\">\n                <FaTransgender />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              custom\n              required\n              as=\"select\"\n              onChange={handleChange}\n              value={userInfo.sex}\n              aria-describedby=\"inputGroupSex\"\n            >\n              <option disabled>請選擇</option>\n              <option>男</option>\n              <option>女</option>\n            </Form.Control>\n          </InputGroup>\n        </Form.Group>\n      </Form.Row>\n\n      {/* 第２行 */}\n      <Form.Row>\n        {/* 第１欄－生日 */}\n        <Form.Group as={Col} md=\"4\" controlId=\"birthday\">\n          <Form.Label>生日</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupBirthday\">\n                <FaBirthdayCake />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              required\n              type=\"date\"\n              onChange={handleChange}\n              placeholder=\"請輸入生日\"\n              value={userInfo.birthday}\n              aria-describedby=\"inputGroupBirthday\"\n            />\n            {/* <Form.Control.Feedback type=\"invalid\">\n              沒有輸入生日！\n            </Form.Control.Feedback> */}\n          </InputGroup>\n        </Form.Group>\n\n        {/* 第２欄－手機 */}\n        <Form.Group as={Col} md=\"4\" controlId=\"tel\">\n          <Form.Label>手機</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupTel\">\n                <GiSmartphone />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              required\n              type=\"tel\"\n              onChange={handleChange}\n              placeholder=\"請輸入手機號碼\"\n              value={userInfo.tel}\n              aria-describedby=\"inputGroupTel\"\n              pattern=\"09\\d{2}-?\\d{3}-?\\d{3}\"\n            />\n            {!userInfo.tel ? (\n              <Form.Control.Feedback type=\"invalid\">\n                　　　　沒有輸入號碼！\n              </Form.Control.Feedback>\n            ) : (\n              <Form.Control.Feedback type=\"invalid\">\n                　　　　號碼格式輸入錯誤！\n              </Form.Control.Feedback>\n            )}\n          </InputGroup>\n        </Form.Group>\n\n        {/* 第３欄－信箱 */}\n        <Form.Group as={Col} md=\"4\" controlId=\"mail\">\n          <Form.Label>信箱</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupMail\">\n                <GoMail />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              required\n              type=\"email\"\n              onChange={handleChange}\n              value={userInfo.mail}\n              maxLength=\"256\"\n              aria-describedby=\"inputGroupMail\"\n              pattern=\"([a-zA-Z0-9_\\.\\-]+)@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+\"\n            />\n            {!userInfo.mail ? (\n              <Form.Control.Feedback type=\"invalid\">\n                　　　　請輸入信箱！\n              </Form.Control.Feedback>\n            ) : (\n              <Form.Control.Feedback type=\"invalid\">\n                　　　　您輸入的信箱格式錯誤！\n              </Form.Control.Feedback>\n            )}\n          </InputGroup>\n        </Form.Group>\n      </Form.Row>\n\n      {/* 第３行－地址 */}\n      <Form.Row>\n        {/* 第１欄－縣市 */}\n        <Form.Group as={Col} md=\"2\" controlId=\"city\">\n          <Form.Label>縣市</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupCity\">\n                <GiModernCity />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              custom\n              required\n              as=\"select\"\n              value={userInfo.city}\n              onChange={handleChange}\n              aria-describedby=\"inputGroupCity\"\n            >\n              <option disabled>請選擇</option>\n              {cityOption.map((obj, index) => {\n                return <option key={index}>{obj}</option>\n              })}\n            </Form.Control>\n          </InputGroup>\n        </Form.Group>\n\n        {/* 第２欄－鄉鎮 */}\n        <Form.Group as={Col} md=\"2\" controlId=\"town\">\n          <Form.Label>鄉鎮</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupTown\">\n                <FaCity />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              custom\n              required\n              as=\"select\"\n              value={userInfo.town}\n              onChange={handleChange}\n              aria-describedby=\"inputGroupTown\"\n            >\n              <option disabled>請選擇</option>\n              {townOption.map((obj, index) => {\n                return <option key={index}>{obj}</option>\n              })}\n            </Form.Control>\n          </InputGroup>\n        </Form.Group>\n\n        {/* 第３欄－郵遞區號 */}\n        <Form.Group as={Col} md=\"2\" controlId=\"zip\">\n          <Form.Label>郵遞區號</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            value={userInfo.zip}\n            onChange={handleChange}\n            placeholder=\"請輸入\"\n            pattern=\"\\d{3}\"\n          />\n          {!userInfo.zip ? (\n            <Form.Control.Feedback type=\"invalid\">\n              請輸入郵遞區號！\n            </Form.Control.Feedback>\n          ) : (\n            <Form.Control.Feedback type=\"invalid\">\n              郵遞區號格式輸入錯誤！\n            </Form.Control.Feedback>\n          )}\n        </Form.Group>\n\n        {/* 第４欄－位址 */}\n        <Form.Group as={Col} md=\"6\" controlId=\"add\">\n          <Form.Label>地址</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupAdd\">\n                <GiHouse />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              required\n              type=\"text\"\n              value={userInfo.add}\n              onChange={handleChange}\n              placeholder=\"請輸入地址\"\n              maxLength=\"128\"\n              aria-describedby=\"inputGroupAdd\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              　　　　沒有輸入地址！\n            </Form.Control.Feedback>\n          </InputGroup>\n          <Form.Text id=\"inputGroupAdd\" style={{ color: 'blue' }}>\n            注意：如地址不正確將導致商品無法送達，請務必確認清楚！\n          </Form.Text>\n        </Form.Group>\n      </Form.Row>\n\n      {/* <Form.Group>\n        <Form.Check\n          required\n          label=\"Agree to terms and conditions\"\n          feedback=\"You must agree before submitting.\"\n        />\n      </Form.Group> */}\n      <Button type=\"submit\">確認更改</Button>\n    </Form>\n  )\n\n  return <>{loading ? spinner : display}</>\n}\n\nexport default UserCenter\n","C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\utils\\ProtectedRoute.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\components\\Footer.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\components\\Breadcrumb.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\components\\Menu.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\data\\CityTownData.js",[],"C:\\Users\\Hsun\\Desktop\\react\\projectB\\src\\data\\CityData.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":26,"column":17,"nodeType":"86","messageId":"87","endLine":26,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":160,"column":6,"nodeType":"90","endLine":160,"endColumn":8,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'setLoger' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDataFromServer'. Either include it or remove the dependency array.","ArrayExpression",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [getDataFromServer]",{"range":"97","text":"98"},[3576,3578],"[getDataFromServer]"]